{
    "AWSTemplateFormatVersion": "2010-09-09",
	"Metadata" : {
  "AWS::CloudFormation::Interface" : {
    "ParameterGroups" : [
	  {
        "Label" : { "default" : "Global Name" },
        "Parameters" : [ "EnvironmentType" ]
      },
      {
        "Label" : { "default" : "API Gateway Configuration" },
        "Parameters" : [ "IDWApiName","HttpMethod","IDWApiStageName"]
      },
      {
        "Label" : { "default":"Lambda Configuration" },
        "Parameters" : [ "LambdaFunctionName" , "LambdaFunctionARN"]
      }
    ]
     }
},
    "Description": "IDW Front End APIGateway",

	"Parameters" : {
	"EnvironmentType": {
      "Description": "The environment type",
      "Type": "String",
      "Default": "UAT",
      "AllowedValues" : [ "DEV", "SIT", "UAT", "PROD"],
      "ConstraintDescription": "Select Environment type from Drop-down."
    },
	"IDWApiStageName": {
      "Description": "The API Deployable Stage Name",
      "Type": "String",
      "Default": "UAT",
	  "AllowedPattern" : "[a-zA-Z0-9]*" 
    },
	"IDWApiName":{
	  "Description": "The IDW APIGateway Name",
      "Type": "String",
      "Default": "u-idw-core-api"
	},
	"HttpMethod":{
	  "Description": "The IDWApiGateway Method",
      "Type": "String",
      "Default": "ANY",
	  "AllowedValues" : ["ANY","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT"]
	},
	"LambdaFunctionName":{
	  "Description": "Lambda Function Name",
      "Type": "String",
      "Default": "u-idw-core-lambda"
	 
	},
   "LambdaFunctionARN":{
	  "Description": "Lambda Function ARN",
      "Type": "String",
      "Default": "arn:aws:lambda:us-east-1:892965571031:function:u-idw-core-lambda"
	 
	}		
  },
    "Resources": {
        "IDWApiGatewayCloudWatchRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
				"RoleName" : {"Fn::Join" : ["-", ["IDW-APIGateway-CloudWatch-Role",{"Ref" : "EnvironmentType"}]]},
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
            },
            "DependsOn": [
                "IDWApiMainStageLogGroup"
            ]
        },
        "IDWApiGatewayAccount": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {
                    "Fn::GetAtt": [
                        "IDWApiGatewayCloudWatchRole",
                        "Arn"
                    ]
                }
            }
        },
        "IDWApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {"Ref": "IDWApiName"},
                "Description": "An IDW REST API",
				"EndpointConfiguration" : {
						"Types" : [ "REGIONAL" ]
					}
            }
        },
        "IDWApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "IDWApi"
                }	
            },
            "DependsOn": [
                "IDWApiMethod"
            ]
        },
        "IDWApiMainStageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": [
                        "IDW-API-Gateway-Execution-Logs_IDW/${IDWApiStageName}",
                        {
                            "StageName": {
                                 "Ref" : "IDWApiStageName"
                            }
                        }
                    ]
                }
            }
        },
        "IDWApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "IDWApiDeployment"
                },
                "MethodSettings": [
                    {
                        "ResourcePath": "",
                        "HttpMethod": "*/*",
                        "DataTraceEnabled": true,
                        "LoggingLevel": "INFO",
                        "MetricsEnabled": false
                    }
                ],
                "RestApiId": {
                    "Ref": "IDWApi"
                },
                "StageName": {
                     "Ref" : "IDWApiStageName"
                }
            },
            "DependsOn": [
                "IDWApiMainStageLogGroup"
            ]
        },
         
        "IDWApiResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "IDWApi",
                        "RootResourceId"
                    ]
                },
				"RestApiId": {
                    "Ref": "IDWApi"
                },
                "PathPart": "{proxy+}"
                
            }
        },
		
        
		
		"IDWOPTIONS": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
            "ResourceId": {
                "Ref": "IDWApiResource"
            },
            "RestApiId": {
                "Ref": "IDWApi"
            },
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "Integration": {
                "Type": "MOCK",
                "IntegrationResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                            "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                            "method.response.header.Access-Control-Allow-Origin": "'*'"
                        },
                        "ResponseTemplates": {
                            "application/json": ""
                        },
                        "StatusCode": "200"
                    }
                ],
                "PassthroughBehavior": "NEVER",
                "RequestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                }
            },
            "MethodResponses": [
                {
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                        "method.response.header.Access-Control-Allow-Origin": true
                    },
                    "StatusCode": "200"
                }
            ]
        }
    },
        "IDWApiMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "AWS_IAM",
                "ResourceId": {
                    "Ref": "IDWApiResource"
                },
                "RestApiId": {
                    "Ref": "IDWApi"
                },
                "HttpMethod": {"Ref" :"HttpMethod"},
				 "RequestParameters": {
                           "method.request.path.proxy": true
                           },
                "Integration": {
				 "CacheKeyParameters": [
                    "method.request.path.proxy"
                ],
				
                    "IntegrationHttpMethod": "ANY",
                    "Type": "AWS_PROXY",
                    "Uri": {
					      
                         "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionARN}/invocations"
                    },
					"IntegrationResponses": [
                    {
                        "StatusCode": 200
                    }
                ]
                }
				
                
            },
			
            "DependsOn": [
                "IDWApiMethodLambdaPermission"
            ]
        },
		
        "IDWApiMethodLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "LambdaFunctionName"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IDWApi}/*/${IDWApiHttpMethod}/*",
                        {
                            "IDWApiHttpMethod": "ANY"
                        }
                    ]
                }
            }
        }
		},
		
    "Outputs": {
        "IDWApiEndpoint": {"Value": {"Fn::Sub": "https://${IDWApi}.execute-api.${AWS::Region}.amazonaws.com/${IDWApiStage}/{proxy+}/"}}
	
				
            }
      }
	  
    